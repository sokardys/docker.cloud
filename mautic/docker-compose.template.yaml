version: '3.4'

# docker network create --scope swarm --driver overlay web
networks:
  web:
    external: true
  monitoring:
    external: true

services:
  mautic:
    image: sokardys/mautic:${MAUTIC_VERSION}
    networks:
      - web
      - default
    environment:
      MAUTIC_DB_PASSWORD: ${MYSQL_PASSWORD}
      MAUTIC_DB_HOST: mysql:3306
      MAUTIC_TRUSTED_PROXIES: 0.0.0.0/0
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 1m
        order: start-first
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.port=80
        - traefik.docker.network=web
        - traefik.frontend.redirect.entryPoint=https
        - traefik.frontend.rule=Host:${DOMAIN}
        - traefik.frontend.passHostHeader=true
    volumes:
      - mauticdata:/var/www/html

  postfix:
    image: juanluisbaptiste/postfix:latest
    environment:
      SMTP_SERVER: ${AWS_SES_SMTP_SERVER}
      SMTP_USERNAME: ${AWS_SES_SMTP_USERNAME}
      SMTP_PASSWORD: ${AWS_SES_SMTP_PASSWORD}
      SERVER_HOSTNAME: ${SMTP_SERVER_HOSTNAME}
    networks:
      - default

  mysql:
    image: mysql:5.7
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - default
      - monitoring
    volumes:
      - mysqldata:/var/lib/mysql

  backup:
    image: schickling/mysql-backup-s3
    networks:
      - default
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      S3_ACCESS_KEY_ID: ${AWS_S3_KEY}
      S3_SECRET_ACCESS_KEY: ${AWS_S3_SECRET}
      S3_BUCKET: ${AWS_S3_BUCKET_BACKUP}
      S3_PREFIX: ${AWS_S3_PREFIX}
      S3_REGION: ${AWS_S3_REGION}
      SCHEDULE: ${BACKUP_FREQUENCY}
    deploy:
      mode: global
    volumes:
      - backupdata:/tmp

volumes:
  backupdata:
  mauticdata:
  mysqldata: