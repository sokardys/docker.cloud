version: '3.4'
services:
  postgres:
    restart: always
    image: postgres:9.6
    volumes:
      - /var/fider/pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - default
      - monitoring
    deploy:
      restart_policy:
        condition: on-failure
  backup:
    image: schickling/postgres-backup-s3
    networks:
      - default
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - S3_ACCESS_KEY_ID=${AWS_S3_KEY}
      - S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET}
      - S3_BUCKET=${AWS_S3_BUCKET}
      - S3_PREFIX=${AWS_S3_PREFIX}
      - S3_REGION=${AWS_S3_REGION}
      - SCHEDULE=${BACKUP_FREQUENCY}
    deploy:
      mode: global
  app:
    networks:
      - default
      - web
    restart: always
    image: getfider/fider:stable
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 1m
        order: start-first
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.port=9999
        - traefik.docker.network=web
        - traefik.frontend.redirect.entryPoint=${DOMAIN_ENTRYPOINT}
        - traefik.frontend.rule=Host:${DOMAIN}
        - traefik.frontend.passHostHeader=true
    environment:
      # Use production for best performance
      # Use development for verbose logs
      GO_ENV: production
      
      # Connection string to the PostgreSQL database. 
      # This example uses the Docker service defined above
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/${POSTGRES_DB}?sslmode=disable
      
      # CHANGE THIS! You can generate a strong secret at https://randomkeygen.com/
      JWT_SECRET: ${JWT_SECRET}

      # From which account e-mails will be sent (required)
      EMAIL_NOREPLY: ${SMTP_EMAIL}

      # EMAIL_MAILGUN_API: key-yourkeygoeshere
      # EMAIL_MAILGUN_DOMAIN: yourdomain.com

      EMAIL_SMTP_HOST: ${SMTP_HOST}
      EMAIL_SMTP_PORT: 587
      EMAIL_SMTP_USERNAME: ${SMTP_EMAIL}
      EMAIL_SMTP_PASSWORD: ${SMTP_PASS}


      # Social OAuth: 
      # Read more on https://getfider.com/docs/configuring-oauth/

      # Facebook
      OAUTH_FACEBOOK_APPID: ${OAUTH_FACEBOOK_ID}
      OAUTH_FACEBOOK_SECRET: ${OAUTH_FACEBOOK_SECRET}

      # Google
      OAUTH_GOOGLE_CLIENTID: ${OAUTH_GOOGLE_ID}
      OAUTH_GOOGLE_SECRET: ${OAUTH_GOOGLE_SECRET}

      # GitHub
      OAUTH_GITHUB_CLIENTID: ${OAUTH_GITHUB_ID}
      OAUTH_GITHUB_SECRET: ${OAUTH_GITHUB_SECRET}

    depends_on:
      - postgres

networks:
  web:
    external: true
  monitoring:
    external: true
