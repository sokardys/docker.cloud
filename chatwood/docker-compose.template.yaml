version: '3.4'

networks:
  web:
    external: true
  monitoring:
    external: true

services:
  chatwood:
    image: chatwood/chatwoot:${CHATWOOD_VERSION}
    environment:
      - ENABLE_ACCOUNT_SIGNUP: ${ENABLE_ACCOUNT_SIGNUP}
      - REDIS_URL: ${REDIS_URL}
      - REDIS_PASSWORD: ${REDIS_PASSWORD}
      - POSTGRES_HOST: ${POSTGRES_HOST}
      - POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      - RAILS_ENV: ${RAILS_ENV}
      - RAILS_MAX_THREADS: ${RAILS_MAX_THREADS}
      - FB_VERIFY_TOKEN: ${FB_VERIFY_TOKEN}
      - FB_APP_SECRET: ${FB_APP_SECRET}
      - FB_APP_ID: ${FB_APP_ID}
      - TWITTER_APP_ID: ${TWITTER_APP_ID}
      - TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
      - TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
      - TWITTER_ENVIRONMENT: ${TWITTER_ENVIRONMENT}
      - MAILER_SENDER_EMAIL: ${MAILER_SENDER_EMAIL}
      - SMTP_PORT: ${SMTP_PORT}
      - SMTP_DOMAIN: ${SMTP_DOMAIN}
      - SMTP_ADDRESS: ${SMTP_ADDRESS}
      - SMTP_USERNAME: ${SMTP_USERNAME}
      - SMTP_PASSWORD: ${SMTP_PASSWORD}
      - SMTP_AUTHENTICATION: ${SMTP_AUTHENTICATION}
      - SMTP_ENABLE_STARTTLS_AUTO: ${SMTP_ENABLE_STARTTLS_AUTO}
      - FRONTEND_URL: ${FRONTEND_URL}
      - ACTIVE_STORAGE_SERVICE: ${ACTIVE_STORAGE_SERVICE}
      - S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION: ${AWS_REGION}
      - SENTRY_DSN: ${SENTRY_DSN}
      - SIDEKIQ_AUTH_USERNAME: ${SIDEKIQ_AUTH_USERNAME}
      - SIDEKIQ_AUTH_PASSWORD: ${SIDEKIQ_AUTH_PASSWORD}
      - ENABLE_BILLING: ${ENABLE_BILLING}
      - CHARGEBEE_API_KEY: ${CHARGEBEE_API_KEY}
      - CHARGEBEE_SITE: ${CHARGEBEE_SITE}
      - CHARGEBEE_WEBHOOK_USERNAME: ${CHARGEBEE_WEBHOOK_USERNAME}
      - CHARGEBEE_WEBHOOK_PASSWORD: ${CHARGEBEE_WEBHOOK_PASSWORD}
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 1m
        order: start-first
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.port=2368
        - traefik.docker.network=web
        - traefik.frontend.redirect.entryPoint=${DOMAIN_ENTRYPOINT}
        - traefik.frontend.passHostHeader=true
        - traefik.frontend.rule=Host:${DOMAIN}
        - traefik.backend.loadbalancer.swarm=true
        - traefik.backend.loadbalancer.stickiness=false
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    image: chatwood/chatwoot:latest
    environment:
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:11.6
    restart: always
    networks:
      - default
      - monitoring
    volumes:
      - postgres:/data/postgres
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis:/data/redis

volumes:
  postgres:
  redis:
  bundle:
  packs: